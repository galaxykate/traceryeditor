import { AbstractEditor } from '../editor'

export var UuidEditor = AbstractEditor.extend({

  preBuild: function () {
    this._super()

    // Use Schema "default" for setting autogenerated uuid
    this.schema['default'] = this.uuid = this.getUuid()

    // Force pattern validation
    this.jsoneditor.validator.schema.properties[this.key].pattern = this.schema.pattern = '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$'

    // Set cleave options if no existing options is present
    if (!this.schema.options) this.schema.options = {}
    if (!this.schema.options.cleave) {
      this.schema.options.cleave = {
        delimiters: ['-'],
        blocks: [8, 4, 4, 4, 12]
      }
    }

    // Set field to readonly and hide field, label and description
    // this.schema.readonly = this.options.compact = this.options.hidden = true;
  },
  sanitize: function (value) {
    if (!this.testUuid(value)) value = this.uuid
    return value
  },
  setValue: function (value, initial, fromTemplate) {
    if (!this.testUuid(value)) value = this.uuid
    this.uuid = value
    this._super(value, initial, fromTemplate)
  },
  getUuid: function () {
    // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript
    var d = new Date().getTime()
    // eslint-disable-next-line no-undef
    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {
      // eslint-disable-next-line no-undef
      d += performance.now() // use high-precision timer if available
    }
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      var r = (d + Math.random() * 16) % 16 | 0
      d = Math.floor(d / 16)
      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16)
    })
  },
  testUuid: function (value) {
    return (/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(value))
  }
})
